pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "dsnkumar121/app:1.01"  // Docker Hub image name
        CONTAINER_NAME = "app_container"
        PORT = "5000"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', credentialsId: 'c0f61b32-c289-4e75-b32f-335ed09b3649', url: 'https://github.com/DSNdinesh/app.git'
            }
        }

        stage('Build and Deploy Locally with Docker Compose') {
            steps {
                sh '''
                docker-compose down || true  # Stop any running containers
                docker-compose up -d --build  # Build and start new containers
                '''
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'f59f83fe-687c-4cc4-a642-c35a6fc8442c', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                sh 'docker push ${DOCKER_IMAGE}'
            }
        }

        stage('Deploy Latest Image with Docker Compose') {
            steps {
                sh '''
                docker-compose down || true  # Stop existing services
                docker-compose pull  # Pull the latest images from Docker Hub
                docker-compose up -d  # Start with the latest image
                '''
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Build or deployment failed!'
        }
    }
}